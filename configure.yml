---
- name: Playbook to configure Edge Environments
  hosts: all
  become: true
  gather_facts: true
  collections:
    - gartner.demo
  tasks:
    - name: Remove all containers
      shell: |
        podman rm -f $(podman ps -a -q);
      ignore_errors: true

    - name: fact for aws instance
      set_fact:
        container_address: "{{ hostvars[inventory_hostname].public_ip_address }}"
      when: group_names[0] == 'aws_ec2'

    - name: fact for gcp
      set_fact:
        container_address: "{{ hostvars[inventory_hostname].ansible_host }}"
      when: group_names[0] == 'gcp' or group_names[0] == 'ungrouped'

    - name: Set container images
      set_fact:
        web_image: "{{ prod_web_image }}"
        inventory_image: "{{ prod_inventory_image }}"
        vertx_image: "{{ prod_vertx_image }}"
        springboot_image: "{{ prod_springboot_image }}"
         

    - name: Import configure role
      import_role:
        name: gartner.demo.configure

    - block:
       - name: Fail Task
         fail:
           msg: 'Failed'
         when: true

      rescue:
       - name: set stats
         set_stats:
           data:
             dublin_store_kiosk1: "http://kiosk1-dub.demoredhat.com"
             dublin_store_kiosk2: "http://kiosk2-dub.demoredhat.com"
             dublin_store_kiosk3: "http://kiosk3-dub.demoredhat.com"
             dublin_store_kiosk4: "http://kiosk4-dub.demoredhat.com"
             dublin_store_kiosk5: "http://kiosk5-dub.demoredhat.com"
         #when: group_names[0] == 'aws_ec2'
         when: location == 'Dublin'

       - name: set stats
         set_stats:
           data:
             jhb_store_kiosk1: "http://kiosk1-jhb.demoredhat.com"
             jhb_store_kiosk2: "http://kiosk2-jhb.demoredhat.com"
             jhb_store_kiosk3: "http://kiosk3-jhb.demoredhat.com"
         #when: group_names[0] == 'gcp' or group_names[0] == 'ungrouped'
         when: location == 'JHB'
