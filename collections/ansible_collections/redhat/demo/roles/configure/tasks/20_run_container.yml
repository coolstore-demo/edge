---
- name: Login to quay.io and create ${XDG_RUNTIME_DIR}/containers/auth.json
  containers.podman.podman_login:
    username: "{{ quay_user }}"
    password: "{{ quay_password }}"
    registry: "{{ quay_registry }}"

- name: Remove containers if already exist
  containers.podman.podman_container:
    name: "{{ item }}"
    state: absent
  loop:
    - Inventory
    - Springboot
    - Vertx
    - Web
    - MobileWeb
    
- name: Force pull images
  containers.podman.podman_image:
    name: "{{ item }}"
    force: true
  loop:
    - "{{ inventory_image }}"
    - "{{ springboot_image }}"
    - "{{ vertx_image }}"
    - "{{ web_image }}"
    - "{{ mobileweb_image }}"

- name: Install Nginx
  ansible.builtin.package:
    name: nginx
    state: present

- name: Configure Nginx
  ansible.builtin.copy:
    content: |
      server {
          listen 80;
          server_name kiosk1-dub.demoredhat.com;
          
          location / {
              proxy_pass http://localhost:8081;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }
      
      server {
          listen 80;
          server_name mobile.kiosk1-dub.demoredhat.com;
          
          location / {
              proxy_pass http://localhost:8082;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }
    dest: /etc/nginx/conf.d/sites.conf
  notify: Restart Nginx

- name: Create inventory container
  containers.podman.podman_container:
    name: "Inventory"
    image: "{{ inventory_image }}"
    state: started
    recreate: true
    ports:
      - "8080:8080"

- name: Create springboot container
  containers.podman.podman_container:
    name: "Springboot"
    image: "{{ springboot_image }}"
    state: started
    recreate: true
    ports:
      - "9000:8080"

- name: Create vertx container
  containers.podman.podman_container:
    name: "Vertx"
    image: "{{ vertx_image }}"
    state: started
    recreate: true
    ports:
      - "8090:8080"
    env:
      COMPONENT_CATALOG_HOST: "{{ container_address }}"
      COMPONENT_CATALOG_PORT: "9000"
      COMPONENT_INVENTORY_HOST: "{{ container_address }}"
      COMPONENT_INVENTORY_PORT: "8080"

- name: Create web container
  containers.podman.podman_container:
    name: "Web"
    image: "{{ web_image }}"
    state: started
    recreate: true
    ports:
      - "8081:8080"
    env:
      COOLSTORE_GW_ENDPOINT="http://{{ container_address}}:8090"

- name: Create mobile web container
  containers.podman.podman_container:
    name: "MobileWeb"
    image: "{{ mobileweb_image }}"
    state: started
    recreate: true
    ports:
      - "8082:8080"
    env:
      COOLSTORE_GW_ENDPOINT: "http://{{ container_address}}:8090"

